# Generated by Django 5.1.3 on 2025-06-29 11:40

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlackListedPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Display',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='display_category/')),
                ('type', models.CharField(choices=[('shirt', 'shirt'), ('pant', 'pant')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='pictures/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('shirt', 'shirt'), ('pant', 'pant')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('shirt', 'Shirt'), ('pant', 'Pant')], max_length=20)),
                ('size', models.CharField(choices=[('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra large'), ('XXL', 'Extra extra large')], max_length=10)),
                ('quantity', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'inventories',
                'constraints': [models.UniqueConstraint(fields=('type', 'size'), name='unique_type_size')],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('printing', 'Printing in Progress & Inventory decreased'), ('shipped', 'Shipped & Customer notified'), ('delivered', 'Delivered & Customer notified'), ('canceled', 'Canceled & Customer notified'), ('delivery refused', 'Delivery refused')], max_length=20)),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Enter a valid name. Only letters, spaces, hyphens, and apostrophes are allowed.', regex="^[A-Za-zÀ-ÖØ-öø-ÿ '-]+$")])),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Enter a valid name. Only letters, spaces, hyphens, and apostrophes are allowed.', regex="^[A-Za-zÀ-ÖØ-öø-ÿ '-]+$")])),
                ('email', models.EmailField(max_length=50)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='DZ')),
                ('address', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)])),
                ('city', models.CharField(choices=[('Adrar', 'Adrar'), ('Chlef', 'Chlef'), ('Laghouat', 'Laghouat'), ('Oum El Bouaghi', 'Oum El Bouaghi'), ('Batna', 'Batna'), ('Béjaïa', 'Béjaïa'), ('Biskra', 'Biskra'), ('Béchar', 'Béchar'), ('Blida', 'Blida'), ('Bouira', 'Bouira'), ('Tamanrasset', 'Tamanrasset'), ('Tébessa', 'Tébessa'), ('Tlemcen', 'Tlemcen'), ('Tiaret', 'Tiaret'), ('Tizi Ouzou', 'Tizi Ouzou'), ('Algers', 'Algers'), ('Djelfa', 'Djelfa'), ('Jijel', 'Jijel'), ('Sétif', 'Sétif'), ('Saïda', 'Saïda'), ('Skikda', 'Skikda'), ('Sidi Bel Abbès', 'Sidi Bel Abbès'), ('Annaba', 'Annaba'), ('Guelma', 'Guelma'), ('Constantine', 'Constantine'), ('Médéa', 'Médéa'), ('Mostaganem', 'Mostaganem'), ("M'Sila", "M'Sila"), ('Mascara', 'Mascara'), ('Ouargla', 'Ouargla'), ('Oran', 'Oran'), ('El Bayadh', 'El Bayadh'), ('Illizi', 'Illizi'), ('Bordj Bou Arréridj', 'Bordj Bou Arréridj'), ('Boumerdès', 'Boumerdès'), ('El Tarf', 'El Tarf'), ('Tindouf', 'Tindouf'), ('Tissemsilt', 'Tissemsilt'), ('El Oued', 'El Oued'), ('Khenchela', 'Khenchela'), ('Souk Ahras', 'Souk Ahras'), ('Tipaza', 'Tipaza'), ('Mila', 'Mila'), ('Aïn Defla', 'Aïn Defla'), ('Naâma', 'Naâma'), ('Aïn Témouchent', 'Aïn Témouchent'), ('Ghardaïa', 'Ghardaïa'), ('Relizane', 'Relizane'), ('Timimoun', 'Timimoun'), ('Bordj Badji Mokhtar', 'Bordj Badji Mokhtar'), ('Ouled Djellal', 'Ouled Djellal'), ('Béni Abbès', 'Béni Abbès'), ('In Salah', 'In Salah'), ('In Guezzam', 'In Guezzam'), ('Touggourt', 'Touggourt'), ('Djanet', 'Djanet'), ("El M'Ghair", "El M'Ghair"), ('El Menia', 'El Menia')], max_length=50)),
                ('postal_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{4,10}$', 'Enter a valid postal code')])),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_store.cart')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='pictures/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(max_length=20)),
                ('size', models.CharField(max_length=10)),
                ('quantity', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_store.order')),
            ],
        ),
        migrations.CreateModel(
            name='Shipping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracking_number', models.CharField(blank=True, max_length=50, null=True)),
                ('estimated_delivery', models.DateField(blank=True, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='e_store.order')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_store.cart')),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='e_store.inventory')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='e_store.item')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('quantity__gte', 1)), name='quantity_min'), models.UniqueConstraint(fields=('cart', 'inventory', 'item'), name='unique_cart_inventory_item')],
            },
        ),
    ]
